// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Ahmed-Sermani/go-crawler/crawler (interfaces: URLGetter,PrivateNetworkDetector)

// Package mock_crawler is a generated GoMock package.
package mock_crawler

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockURLGetter is a mock of URLGetter interface.
type MockURLGetter struct {
	ctrl     *gomock.Controller
	recorder *MockURLGetterMockRecorder
}

// MockURLGetterMockRecorder is the mock recorder for MockURLGetter.
type MockURLGetterMockRecorder struct {
	mock *MockURLGetter
}

// NewMockURLGetter creates a new mock instance.
func NewMockURLGetter(ctrl *gomock.Controller) *MockURLGetter {
	mock := &MockURLGetter{ctrl: ctrl}
	mock.recorder = &MockURLGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLGetter) EXPECT() *MockURLGetterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockURLGetter) Get(arg0 string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockURLGetterMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockURLGetter)(nil).Get), arg0)
}

// MockPrivateNetworkDetector is a mock of PrivateNetworkDetector interface.
type MockPrivateNetworkDetector struct {
	ctrl     *gomock.Controller
	recorder *MockPrivateNetworkDetectorMockRecorder
}

// MockPrivateNetworkDetectorMockRecorder is the mock recorder for MockPrivateNetworkDetector.
type MockPrivateNetworkDetectorMockRecorder struct {
	mock *MockPrivateNetworkDetector
}

// NewMockPrivateNetworkDetector creates a new mock instance.
func NewMockPrivateNetworkDetector(ctrl *gomock.Controller) *MockPrivateNetworkDetector {
	mock := &MockPrivateNetworkDetector{ctrl: ctrl}
	mock.recorder = &MockPrivateNetworkDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrivateNetworkDetector) EXPECT() *MockPrivateNetworkDetectorMockRecorder {
	return m.recorder
}

// IsPrivate mocks base method.
func (m *MockPrivateNetworkDetector) IsPrivate(arg0 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsPrivate", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsPrivate indicates an expected call of IsPrivate.
func (mr *MockPrivateNetworkDetectorMockRecorder) IsPrivate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsPrivate", reflect.TypeOf((*MockPrivateNetworkDetector)(nil).IsPrivate), arg0)
}
